"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1439],{8799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"server/Events","title":"Server(-Sent) Events","description":"Spring Boot Admin uses event sourcing per default to track changes of registered applications.","source":"@site/docs/server/10-Events.mdx","sourceDirName":"server","slug":"/server/Events","permalink":"/3.5.6-SNAPSHOT/docs/server/Events","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_custom_props":{"icon":"server"}},"sidebar":"tutorialSidebar","previous":{"title":"Foster Security","permalink":"/3.5.6-SNAPSHOT/docs/server/security"},"next":{"title":"Clustering","permalink":"/3.5.6-SNAPSHOT/docs/server/Clustering"}}');var i=t(4848),a=t(8453);const r={sidebar_custom_props:{icon:"server"}},o="Server(-Sent) Events",d={},c=[{value:"Event Endpoints",id:"event-endpoints",level:2},{value:"List All Events",id:"list-all-events",level:3},{value:"Stream All Events",id:"stream-all-events",level:3},{value:"Stream Events for a Specific Instance",id:"stream-events-for-a-specific-instance",level:3},{value:"Available Events",id:"available-events",level:2},{value:"InstanceRegisteredEvent",id:"instanceregisteredevent",level:3},{value:"InstanceRegistrationUpdatedEvent",id:"instanceregistrationupdatedevent",level:3},{value:"InstanceEndpointsDetectedEvent",id:"instanceendpointsdetectedevent",level:3},{value:"InstanceInfoChangedEvent",id:"instanceinfochangedevent",level:3},{value:"InstanceStatusChangedEvent",id:"instancestatuschangedevent",level:3},{value:"InstanceDeregisteredEvent",id:"instancederegisteredevent",level:3},{value:"Viewing Events in the UI Journal",id:"viewing-events-in-the-ui-journal",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"server-sent-events",children:"Server(-Sent) Events"})}),"\n",(0,i.jsx)(n.p,{children:"Spring Boot Admin uses event sourcing per default to track changes of registered applications.\nEvery change (see relevant events below) of an application is stored as an event in memory.\nThis allows to reconstruct the state of an application at any point in time, as far as the server is not restarted."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Server Events in Spring Boot Admin are not the same as Spring Boot's AuditEvent actuator events.\nServer Events track changes and lifecycle of registered instances for monitoring and UI purposes, while AuditEvents are used\nfor auditing application actions and security events."})}),"\n",(0,i.jsx)(n.h2,{id:"event-endpoints",children:"Event Endpoints"}),"\n",(0,i.jsxs)(n.p,{children:["Spring Boot Admin utilizes several endpoints for accessing instance events via the ",(0,i.jsx)(n.code,{children:"InstancesController"}),":"]}),"\n",(0,i.jsx)(n.h3,{id:"list-all-events",children:"List All Events"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.strong,{children:["GET ",(0,i.jsx)(n.code,{children:"/instances/events"})]})}),"\n",(0,i.jsx)(n.li,{children:"Returns all instance events as a JSON array."}),"\n",(0,i.jsx)(n.li,{children:"Use this to retrieve the complete event history for all registered instances on UI startup."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"stream-all-events",children:"Stream All Events"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["GET ",(0,i.jsx)(n.code,{children:"/instances/events"})]})," (with ",(0,i.jsx)(n.code,{children:"Accept: text/event-stream"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Returns a continuous stream of instance events using ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events",children:"Server-Sent Events (SSE)"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Useful for real-time monitoring and UI updates."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"stream-events-for-a-specific-instance",children:"Stream Events for a Specific Instance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["GET ",(0,i.jsx)(n.code,{children:"/instances/{id}"})]})," (with ",(0,i.jsx)(n.code,{children:"Accept: text/event-stream"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Streams events for a single instance, identified by its ID."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"available-events",children:"Available Events"}),"\n",(0,i.jsx)(n.h3,{id:"instanceregisteredevent",children:"InstanceRegisteredEvent"}),"\n",(0,i.jsx)(n.p,{children:"Indicates that a new instance has been registered with Spring Boot Admin.\nThis event is used to add the instance to SBA and starts monitoring its status and endpoints."}),"\n",(0,i.jsx)(n.h3,{id:"instanceregistrationupdatedevent",children:"InstanceRegistrationUpdatedEvent"}),"\n",(0,i.jsx)(n.p,{children:"Signals that the registration details of an instance have changed (e.g., new management URL or changed registration source).\nThis event is used to update how the instance is accessed and monitored."}),"\n",(0,i.jsx)(n.h3,{id:"instanceendpointsdetectedevent",children:"InstanceEndpointsDetectedEvent"}),"\n",(0,i.jsx)(n.p,{children:"Signals that the endpoints (such as actuator endpoints) of an instance have been detected or updated.\nThis event is used to refresh the available operations and monitoring features for the instance in the UI."}),"\n",(0,i.jsx)(n.h3,{id:"instanceinfochangedevent",children:"InstanceInfoChangedEvent"}),"\n",(0,i.jsx)(n.p,{children:"Occurs when the metadata or information (e.g., version, build info, tags) of an instance changes.\nThis event is used to update the displayed details about the instance in the UI."}),"\n",(0,i.jsx)(n.h3,{id:"instancestatuschangedevent",children:"InstanceStatusChangedEvent"}),"\n",(0,i.jsx)(n.p,{children:"Occurs when the status of an instance changes (e.g., from UP to DOWN, or vice versa).\nThis event is used to update the health indicator and status badge in the UI, and may trigger notifications or alerts."}),"\n",(0,i.jsx)(n.h3,{id:"instancederegisteredevent",children:"InstanceDeregisteredEvent"}),"\n",(0,i.jsx)(n.p,{children:"Indicates that an instance has been unregistered from Spring Boot Admin.\nThis event is used to remove the instance from the UI and stop monitoring its status and endpoints."}),"\n",(0,i.jsx)(n.h2,{id:"viewing-events-in-the-ui-journal",children:"Viewing Events in the UI Journal"}),"\n",(0,i.jsx)(n.p,{children:"All instance events described above can be viewed in the Journal section of the Spring Boot Admin UI.\nThe Journal provides a chronological log of all relevant events for each registered instance, allowing users to track changes,\nstatus updates, and lifecycle actions directly from the web interface."}),"\n",(0,i.jsx)(n.p,{children:"This feature helps administrators and operators to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Audit the history of instance registrations, status changes, and endpoint updates"}),"\n",(0,i.jsx)(n.li,{children:"Troubleshoot issues by reviewing the sequence of events"}),"\n",(0,i.jsx)(n.li,{children:"Gain insights into the operational state of monitored applications"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);